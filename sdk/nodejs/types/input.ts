// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface BucketCorsRule {
    allowedHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    allowedMethods: pulumi.Input<pulumi.Input<string>[]>;
    allowedOrigins: pulumi.Input<pulumi.Input<string>[]>;
    exposeHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    maxAgeSeconds?: pulumi.Input<number>;
}

export interface BucketGrant {
    id?: pulumi.Input<string>;
    permissions: pulumi.Input<pulumi.Input<string>[]>;
    type: pulumi.Input<string>;
    uri?: pulumi.Input<string>;
}

export interface BucketLifecycleRule {
    abortIncompleteMultipartUploadDays?: pulumi.Input<number>;
    enabled: pulumi.Input<boolean>;
    expiration?: pulumi.Input<inputs.BucketLifecycleRuleExpiration>;
    id?: pulumi.Input<string>;
    noncurrentVersionExpiration?: pulumi.Input<inputs.BucketLifecycleRuleNoncurrentVersionExpiration>;
    noncurrentVersionTransitions?: pulumi.Input<pulumi.Input<inputs.BucketLifecycleRuleNoncurrentVersionTransition>[]>;
    prefix?: pulumi.Input<string>;
    transitions?: pulumi.Input<pulumi.Input<inputs.BucketLifecycleRuleTransition>[]>;
}

export interface BucketLifecycleRuleExpiration {
    date?: pulumi.Input<string>;
    days?: pulumi.Input<number>;
    expiredObjectDeleteMarker?: pulumi.Input<boolean>;
}

export interface BucketLifecycleRuleNoncurrentVersionExpiration {
    days?: pulumi.Input<number>;
}

export interface BucketLifecycleRuleNoncurrentVersionTransition {
    days?: pulumi.Input<number>;
    storageClass: pulumi.Input<string>;
}

export interface BucketLifecycleRuleTransition {
    date?: pulumi.Input<string>;
    days?: pulumi.Input<number>;
    storageClass: pulumi.Input<string>;
}

export interface BucketLogging {
    targetBucket: pulumi.Input<string>;
    targetPrefix?: pulumi.Input<string>;
}

export interface BucketVersioning {
    enabled?: pulumi.Input<boolean>;
    mfaDelete?: pulumi.Input<boolean>;
}

export interface GetPolicyDocumentStatement {
    actions?: string[];
    conditions?: inputs.GetPolicyDocumentStatementCondition[];
    effect?: string;
    notActions?: string[];
    notPrincipals?: inputs.GetPolicyDocumentStatementNotPrincipal[];
    notResources?: string[];
    principals?: inputs.GetPolicyDocumentStatementPrincipal[];
    resources?: string[];
    sid?: string;
}

export interface GetPolicyDocumentStatementArgs {
    actions?: pulumi.Input<pulumi.Input<string>[]>;
    conditions?: pulumi.Input<pulumi.Input<inputs.GetPolicyDocumentStatementConditionArgs>[]>;
    effect?: pulumi.Input<string>;
    notActions?: pulumi.Input<pulumi.Input<string>[]>;
    notPrincipals?: pulumi.Input<pulumi.Input<inputs.GetPolicyDocumentStatementNotPrincipalArgs>[]>;
    notResources?: pulumi.Input<pulumi.Input<string>[]>;
    principals?: pulumi.Input<pulumi.Input<inputs.GetPolicyDocumentStatementPrincipalArgs>[]>;
    resources?: pulumi.Input<pulumi.Input<string>[]>;
    sid?: pulumi.Input<string>;
}

export interface GetPolicyDocumentStatementCondition {
    test: string;
    values: string[];
    variable: string;
}

export interface GetPolicyDocumentStatementConditionArgs {
    test: pulumi.Input<string>;
    values: pulumi.Input<pulumi.Input<string>[]>;
    variable: pulumi.Input<string>;
}

export interface GetPolicyDocumentStatementNotPrincipal {
    identifiers: string[];
    type: string;
}

export interface GetPolicyDocumentStatementNotPrincipalArgs {
    identifiers: pulumi.Input<pulumi.Input<string>[]>;
    type: pulumi.Input<string>;
}

export interface GetPolicyDocumentStatementPrincipal {
    identifiers: string[];
    type: string;
}

export interface GetPolicyDocumentStatementPrincipalArgs {
    identifiers: pulumi.Input<pulumi.Input<string>[]>;
    type: pulumi.Input<string>;
}

export interface ProviderAssumeRole {
    durationSeconds?: pulumi.Input<number>;
    externalId?: pulumi.Input<string>;
    policy?: pulumi.Input<string>;
    policyArns?: pulumi.Input<pulumi.Input<string>[]>;
    roleArn?: pulumi.Input<string>;
    sessionName?: pulumi.Input<string>;
    transitiveTagKeys?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ProviderEndpoint {
    iam?: pulumi.Input<string>;
    s3?: pulumi.Input<string>;
    sts?: pulumi.Input<string>;
}
export namespace config {
}
