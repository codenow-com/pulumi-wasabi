// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface BucketCorsRule {
    allowedHeaders?: string[];
    allowedMethods: string[];
    allowedOrigins: string[];
    exposeHeaders?: string[];
    maxAgeSeconds?: number;
}

export interface BucketGrant {
    id?: string;
    permissions: string[];
    type: string;
    uri?: string;
}

export interface BucketLifecycleRule {
    abortIncompleteMultipartUploadDays?: number;
    enabled: boolean;
    expiration?: outputs.BucketLifecycleRuleExpiration;
    id: string;
    noncurrentVersionExpiration?: outputs.BucketLifecycleRuleNoncurrentVersionExpiration;
    noncurrentVersionTransitions?: outputs.BucketLifecycleRuleNoncurrentVersionTransition[];
    prefix?: string;
    transitions?: outputs.BucketLifecycleRuleTransition[];
}

export interface BucketLifecycleRuleExpiration {
    date?: string;
    days?: number;
    expiredObjectDeleteMarker?: boolean;
}

export interface BucketLifecycleRuleNoncurrentVersionExpiration {
    days?: number;
}

export interface BucketLifecycleRuleNoncurrentVersionTransition {
    days?: number;
    storageClass: string;
}

export interface BucketLifecycleRuleTransition {
    date?: string;
    days?: number;
    storageClass: string;
}

export interface BucketLogging {
    targetBucket: string;
    targetPrefix?: string;
}

export interface BucketVersioning {
    enabled?: boolean;
    mfaDelete?: boolean;
}

export interface GetGroupUser {
    arn: string;
    path: string;
    userId: string;
    userName: string;
}

export interface GetPolicyDocumentStatement {
    actions?: string[];
    conditions?: outputs.GetPolicyDocumentStatementCondition[];
    effect?: string;
    notActions?: string[];
    notPrincipals?: outputs.GetPolicyDocumentStatementNotPrincipal[];
    notResources?: string[];
    principals?: outputs.GetPolicyDocumentStatementPrincipal[];
    resources?: string[];
    sid?: string;
}

export interface GetPolicyDocumentStatementCondition {
    test: string;
    values: string[];
    variable: string;
}

export interface GetPolicyDocumentStatementNotPrincipal {
    identifiers: string[];
    type: string;
}

export interface GetPolicyDocumentStatementPrincipal {
    identifiers: string[];
    type: string;
}

export namespace config {
    export interface AssumeRole {
        durationSeconds?: number;
        externalId?: string;
        policy?: string;
        policyArns?: string[];
        roleArn?: string;
        sessionName?: string;
        transitiveTagKeys?: string[];
    }

    export interface Endpoints {
        iam?: string;
        s3?: string;
        sts?: string;
    }

}
