// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wasabi

import (
	"context"
	"reflect"

	"errors"
	"github.com/codenow-com/pulumi-wasabi/sdk/go/wasabi/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The provider type for the wasabi package. By default, resources use package-wide configuration
// settings, however an explicit `Provider` instance may be created and passed during resource
// construction to achieve fine-grained programmatic control over provider settings. See the
// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
type Provider struct {
	pulumi.ProviderResourceState

	// The access key for API operations. You can retrieve this from the 'Security & Credentials' section of the AWS console.
	AccessKey pulumi.StringPtrOutput `pulumi:"accessKey"`
	// The profile for API operations. If not set, the default profile created with `aws configure` will be used.
	Profile pulumi.StringPtrOutput `pulumi:"profile"`
	// The region where AWS operations will take place. Examples are us-east-1, us-west-2, etc.
	Region pulumi.StringOutput `pulumi:"region"`
	// The secret key for API operations. You can retrieve this from the 'Security & Credentials' section of the AWS console.
	SecretKey pulumi.StringPtrOutput `pulumi:"secretKey"`
	// The path to the shared credentials file. If not set this defaults to ~/.aws/credentials.
	SharedCredentialsFile pulumi.StringPtrOutput `pulumi:"sharedCredentialsFile"`
	// session token. A session token is only required if you are using temporary security credentials.
	Token pulumi.StringPtrOutput `pulumi:"token"`
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Region == nil {
		return nil, errors.New("invalid value for required argument 'Region'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:wasabi", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	// The access key for API operations. You can retrieve this from the 'Security & Credentials' section of the AWS console.
	AccessKey           *string             `pulumi:"accessKey"`
	AllowedAccountIds   []string            `pulumi:"allowedAccountIds"`
	AssumeRole          *ProviderAssumeRole `pulumi:"assumeRole"`
	Endpoints           []ProviderEndpoint  `pulumi:"endpoints"`
	ForbiddenAccountIds []string            `pulumi:"forbiddenAccountIds"`
	// Explicitly allow the provider to perform "insecure" SSL requests. If omitted,default value is `false`
	Insecure *bool `pulumi:"insecure"`
	// The maximum number of times an AWS API request is being executed. If the API request still fails, an error is thrown.
	MaxRetries *int `pulumi:"maxRetries"`
	// The profile for API operations. If not set, the default profile created with `aws configure` will be used.
	Profile *string `pulumi:"profile"`
	// The region where AWS operations will take place. Examples are us-east-1, us-west-2, etc.
	Region string `pulumi:"region"`
	// Set this to true to force the request to use path-style addressing, i.e., http://s3.amazonaws.com/BUCKET/KEY. By
	// default, the S3 client will use virtual hosted bucket addressing when possible (http://BUCKET.s3.amazonaws.com/KEY).
	// Specific to the Amazon S3 service.
	S3ForcePathStyle *bool `pulumi:"s3ForcePathStyle"`
	// The secret key for API operations. You can retrieve this from the 'Security & Credentials' section of the AWS console.
	SecretKey *string `pulumi:"secretKey"`
	// The path to the shared credentials file. If not set this defaults to ~/.aws/credentials.
	SharedCredentialsFile *string `pulumi:"sharedCredentialsFile"`
	// Skip the credentials validation via STS API. Used for AWS API implementations that do not have STS
	// available/implemented.
	SkipCredentialsValidation *bool `pulumi:"skipCredentialsValidation"`
	SkipMetadataApiCheck      *bool `pulumi:"skipMetadataApiCheck"`
	// Skip requesting the account ID. Used for AWS API implementations that do not have IAM/STS API and/or metadata API.
	SkipRequestingAccountId *bool `pulumi:"skipRequestingAccountId"`
	// session token. A session token is only required if you are using temporary security credentials.
	Token *string `pulumi:"token"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	// The access key for API operations. You can retrieve this from the 'Security & Credentials' section of the AWS console.
	AccessKey           pulumi.StringPtrInput
	AllowedAccountIds   pulumi.StringArrayInput
	AssumeRole          ProviderAssumeRolePtrInput
	Endpoints           ProviderEndpointArrayInput
	ForbiddenAccountIds pulumi.StringArrayInput
	// Explicitly allow the provider to perform "insecure" SSL requests. If omitted,default value is `false`
	Insecure pulumi.BoolPtrInput
	// The maximum number of times an AWS API request is being executed. If the API request still fails, an error is thrown.
	MaxRetries pulumi.IntPtrInput
	// The profile for API operations. If not set, the default profile created with `aws configure` will be used.
	Profile pulumi.StringPtrInput
	// The region where AWS operations will take place. Examples are us-east-1, us-west-2, etc.
	Region pulumi.StringInput
	// Set this to true to force the request to use path-style addressing, i.e., http://s3.amazonaws.com/BUCKET/KEY. By
	// default, the S3 client will use virtual hosted bucket addressing when possible (http://BUCKET.s3.amazonaws.com/KEY).
	// Specific to the Amazon S3 service.
	S3ForcePathStyle pulumi.BoolPtrInput
	// The secret key for API operations. You can retrieve this from the 'Security & Credentials' section of the AWS console.
	SecretKey pulumi.StringPtrInput
	// The path to the shared credentials file. If not set this defaults to ~/.aws/credentials.
	SharedCredentialsFile pulumi.StringPtrInput
	// Skip the credentials validation via STS API. Used for AWS API implementations that do not have STS
	// available/implemented.
	SkipCredentialsValidation pulumi.BoolPtrInput
	SkipMetadataApiCheck      pulumi.BoolPtrInput
	// Skip requesting the account ID. Used for AWS API implementations that do not have IAM/STS API and/or metadata API.
	SkipRequestingAccountId pulumi.BoolPtrInput
	// session token. A session token is only required if you are using temporary security credentials.
	Token pulumi.StringPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}

type ProviderInput interface {
	pulumi.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(ctx context.Context) ProviderOutput
}

func (*Provider) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (i *Provider) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}

func (i *Provider) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput)
}

type ProviderOutput struct{ *pulumi.OutputState }

func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

// The access key for API operations. You can retrieve this from the 'Security & Credentials' section of the AWS console.
func (o ProviderOutput) AccessKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.AccessKey }).(pulumi.StringPtrOutput)
}

// The profile for API operations. If not set, the default profile created with `aws configure` will be used.
func (o ProviderOutput) Profile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Profile }).(pulumi.StringPtrOutput)
}

// The region where AWS operations will take place. Examples are us-east-1, us-west-2, etc.
func (o ProviderOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringOutput { return v.Region }).(pulumi.StringOutput)
}

// The secret key for API operations. You can retrieve this from the 'Security & Credentials' section of the AWS console.
func (o ProviderOutput) SecretKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.SecretKey }).(pulumi.StringPtrOutput)
}

// The path to the shared credentials file. If not set this defaults to ~/.aws/credentials.
func (o ProviderOutput) SharedCredentialsFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.SharedCredentialsFile }).(pulumi.StringPtrOutput)
}

// session token. A session token is only required if you are using temporary security credentials.
func (o ProviderOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Token }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderInput)(nil)).Elem(), &Provider{})
	pulumi.RegisterOutputType(ProviderOutput{})
}
