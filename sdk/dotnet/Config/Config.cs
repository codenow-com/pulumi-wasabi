// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Immutable;

namespace Pulumi.Wasabi
{
    public static class Config
    {
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "IDE1006", Justification = 
        "Double underscore prefix used to avoid conflicts with variable names.")]
        private sealed class __Value<T>
        {
            private readonly Func<T> _getter;
            private T _value = default!;
            private bool _set;

            public __Value(Func<T> getter)
            {
                _getter = getter;
            }

            public T Get() => _set ? _value : _getter();

            public void Set(T value)
            {
                _value = value;
                _set = true;
            }
        }

        private static readonly global::Pulumi.Config __config = new global::Pulumi.Config("wasabi");

        private static readonly __Value<string?> _accessKey = new __Value<string?>(() => __config.Get("accessKey"));
        /// <summary>
        /// The access key for API operations. You can retrieve this from the 'Security &amp; Credentials' section of the AWS console.
        /// </summary>
        public static string? AccessKey
        {
            get => _accessKey.Get();
            set => _accessKey.Set(value);
        }

        private static readonly __Value<ImmutableArray<string>> _allowedAccountIds = new __Value<ImmutableArray<string>>(() => __config.GetObject<ImmutableArray<string>>("allowedAccountIds"));
        public static ImmutableArray<string> AllowedAccountIds
        {
            get => _allowedAccountIds.Get();
            set => _allowedAccountIds.Set(value);
        }

        private static readonly __Value<Pulumi.Wasabi.Config.Types.AssumeRole?> _assumeRole = new __Value<Pulumi.Wasabi.Config.Types.AssumeRole?>(() => __config.GetObject<Pulumi.Wasabi.Config.Types.AssumeRole>("assumeRole"));
        public static Pulumi.Wasabi.Config.Types.AssumeRole? AssumeRole
        {
            get => _assumeRole.Get();
            set => _assumeRole.Set(value);
        }

        private static readonly __Value<ImmutableArray<Pulumi.Wasabi.Config.Types.Endpoints>> _endpoints = new __Value<ImmutableArray<Pulumi.Wasabi.Config.Types.Endpoints>>(() => __config.GetObject<ImmutableArray<Pulumi.Wasabi.Config.Types.Endpoints>>("endpoints"));
        public static ImmutableArray<Pulumi.Wasabi.Config.Types.Endpoints> Endpoints
        {
            get => _endpoints.Get();
            set => _endpoints.Set(value);
        }

        private static readonly __Value<ImmutableArray<string>> _forbiddenAccountIds = new __Value<ImmutableArray<string>>(() => __config.GetObject<ImmutableArray<string>>("forbiddenAccountIds"));
        public static ImmutableArray<string> ForbiddenAccountIds
        {
            get => _forbiddenAccountIds.Get();
            set => _forbiddenAccountIds.Set(value);
        }

        private static readonly __Value<bool?> _insecure = new __Value<bool?>(() => __config.GetBoolean("insecure"));
        /// <summary>
        /// Explicitly allow the provider to perform "insecure" SSL requests. If omitted,default value is `false`
        /// </summary>
        public static bool? Insecure
        {
            get => _insecure.Get();
            set => _insecure.Set(value);
        }

        private static readonly __Value<int?> _maxRetries = new __Value<int?>(() => __config.GetInt32("maxRetries"));
        /// <summary>
        /// The maximum number of times an AWS API request is being executed. If the API request still fails, an error is thrown.
        /// </summary>
        public static int? MaxRetries
        {
            get => _maxRetries.Get();
            set => _maxRetries.Set(value);
        }

        private static readonly __Value<string?> _profile = new __Value<string?>(() => __config.Get("profile"));
        /// <summary>
        /// The profile for API operations. If not set, the default profile created with `aws configure` will be used.
        /// </summary>
        public static string? Profile
        {
            get => _profile.Get();
            set => _profile.Set(value);
        }

        private static readonly __Value<string?> _region = new __Value<string?>(() => __config.Get("region"));
        /// <summary>
        /// The region where AWS operations will take place. Examples are us-east-1, us-west-2, etc.
        /// </summary>
        public static string? Region
        {
            get => _region.Get();
            set => _region.Set(value);
        }

        private static readonly __Value<bool?> _s3ForcePathStyle = new __Value<bool?>(() => __config.GetBoolean("s3ForcePathStyle"));
        /// <summary>
        /// Set this to true to force the request to use path-style addressing, i.e., http://s3.amazonaws.com/BUCKET/KEY. By
        /// default, the S3 client will use virtual hosted bucket addressing when possible (http://BUCKET.s3.amazonaws.com/KEY).
        /// Specific to the Amazon S3 service.
        /// </summary>
        public static bool? S3ForcePathStyle
        {
            get => _s3ForcePathStyle.Get();
            set => _s3ForcePathStyle.Set(value);
        }

        private static readonly __Value<string?> _secretKey = new __Value<string?>(() => __config.Get("secretKey"));
        /// <summary>
        /// The secret key for API operations. You can retrieve this from the 'Security &amp; Credentials' section of the AWS console.
        /// </summary>
        public static string? SecretKey
        {
            get => _secretKey.Get();
            set => _secretKey.Set(value);
        }

        private static readonly __Value<string?> _sharedCredentialsFile = new __Value<string?>(() => __config.Get("sharedCredentialsFile"));
        /// <summary>
        /// The path to the shared credentials file. If not set this defaults to ~/.aws/credentials.
        /// </summary>
        public static string? SharedCredentialsFile
        {
            get => _sharedCredentialsFile.Get();
            set => _sharedCredentialsFile.Set(value);
        }

        private static readonly __Value<bool?> _skipCredentialsValidation = new __Value<bool?>(() => __config.GetBoolean("skipCredentialsValidation"));
        /// <summary>
        /// Skip the credentials validation via STS API. Used for AWS API implementations that do not have STS
        /// available/implemented.
        /// </summary>
        public static bool? SkipCredentialsValidation
        {
            get => _skipCredentialsValidation.Get();
            set => _skipCredentialsValidation.Set(value);
        }

        private static readonly __Value<bool?> _skipMetadataApiCheck = new __Value<bool?>(() => __config.GetBoolean("skipMetadataApiCheck"));
        public static bool? SkipMetadataApiCheck
        {
            get => _skipMetadataApiCheck.Get();
            set => _skipMetadataApiCheck.Set(value);
        }

        private static readonly __Value<bool?> _skipRequestingAccountId = new __Value<bool?>(() => __config.GetBoolean("skipRequestingAccountId"));
        /// <summary>
        /// Skip requesting the account ID. Used for AWS API implementations that do not have IAM/STS API and/or metadata API.
        /// </summary>
        public static bool? SkipRequestingAccountId
        {
            get => _skipRequestingAccountId.Get();
            set => _skipRequestingAccountId.Set(value);
        }

        private static readonly __Value<string?> _token = new __Value<string?>(() => __config.Get("token"));
        /// <summary>
        /// session token. A session token is only required if you are using temporary security credentials.
        /// </summary>
        public static string? Token
        {
            get => _token.Get();
            set => _token.Set(value);
        }

        public static class Types
        {

             public class AssumeRole
             {
                public int? DurationSeconds { get; set; }
                public string? ExternalId { get; set; } = null!;
                public string? Policy { get; set; } = null!;
                public ImmutableArray<string> PolicyArns { get; set; }
                public string? RoleArn { get; set; } = null!;
                public string? SessionName { get; set; } = null!;
                public ImmutableArray<string> TransitiveTagKeys { get; set; }
            }

             public class Endpoints
             {
                public string? Iam { get; set; } = null!;
                public string? S3 { get; set; } = null!;
                public string? Sts { get; set; } = null!;
            }
        }
    }
}
